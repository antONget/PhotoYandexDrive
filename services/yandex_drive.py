import requests
from config_data.config import Config, load_config


config: Config = load_config()
TOKEN = config.tg_bot.yatoken
HEADERS = {"Authorization": f"OAuth {TOKEN}"}


async def get_list_folders_to_path(path="disk:/") -> list[str]:
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
    :param path:
    :return:
    """
    url = "https://cloud-api.yandex.net/v1/disk/resources"
    params = {"path": path, "limit": 100}
    list_folder = []  # –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    response = requests.get(url, headers=HEADERS, params=params)
    if response.status_code == 200:
        items = response.json().get("_embedded", {}).get("items", [])
        print(items)
        for item in items:
            if item['type'] == 'dir':
                list_folder.append(item['name'])
        return list_folder
    else:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞: {response.text}"
        print(error_msg)


async def get_list_file_to_path(path="disk:/") -> list[str]:
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É –ø—É—Ç–∏ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
    :param path:
    :return:
    """
    url = "https://cloud-api.yandex.net/v1/disk/resources"
    params = {"path": path, "limit": 100}
    list_folder = []  # –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    response = requests.get(url, headers=HEADERS, params=params)
    if response.status_code == 200:
        items = response.json().get("_embedded", {}).get("items", [])
        print(items)
        for item in items:
            if item['type'] == 'file':
                list_folder.append(item['name'])
        return list_folder
    else:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞: {response.text}"
        print(error_msg)


async def get_download_link(file_path):
    """–ü–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    url = "https://cloud-api.yandex.net/v1/disk/resources/download"
    params = {"path": file_path}

    response = requests.get(url, headers=HEADERS, params=params)
    if response.status_code == 200:
        result = f"üìÑ –°—Å—ã–ª–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {response.json()['href']}"
        return result
    else:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞: {response.text}"
        print(error_msg)


async def get_photo_view_link(file_path: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ –≤ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ."""
    url = "https://cloud-api.yandex.net/v1/disk/resources"
    params = {"path": file_path}

    response = requests.get(url, headers=HEADERS, params=params)
    if response.status_code == 200:
        public_url = response.json().get("public_url")
        if public_url:
            return public_url  # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–æ—Ç–æ
        else:
            print("‚ùå –§–∞–π–ª –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, —Å–æ–∑–¥–∞—ë–º –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É...")
            return await publish_photo(file_path)
    else:
        print("‚ùå –û—à–∏–±–∫–∞:", response.text)
        return None


async def publish_photo(file_path: str) -> str:
    """–î–µ–ª–∞–µ—Ç —Ñ–æ—Ç–æ –ø—É–±–ª–∏—á–Ω—ã–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä."""
    url = "https://cloud-api.yandex.net/v1/disk/resources/publish"
    params = {"path": file_path}

    response = requests.put(url, headers=HEADERS, params=params)
    if response.status_code == 202:
        return await get_photo_view_link(file_path)  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:", response.text)
        return None
